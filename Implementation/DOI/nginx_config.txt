# =============================================================================
# CATALYST TRADING SYSTEM - NGINX REVERSE PROXY CONFIGURATION
# DigitalOcean Deployment with SSL Support
# =============================================================================

# Performance and worker configuration
worker_processes auto;
worker_rlimit_nofile 65535;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50m;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=dashboard:10m rate=500r/m;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;";
    
    # Upstream definitions for load balancing
    upstream coordination_backend {
        server coordination-service:5000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream news_backend {
        server news-service:5008 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream scanner_backend {
        server scanner-service:5001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream pattern_backend {
        server pattern-service:5002 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream technical_backend {
        server technical-service:5003 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream trading_backend {
        server trading-service:5005 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream reporting_backend {
        server reporting-service:5009 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream dashboard_backend {
        server web-dashboard:5010 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # ==========================================================================
    # HTTP TO HTTPS REDIRECT (Port 80)
    # ==========================================================================
    server {
        listen 80;
        server_name _;
        
        # Health check endpoint (bypass redirect)
        location /health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # ==========================================================================
    # MAIN HTTPS SERVER (Port 443)
    # ==========================================================================
    server {
        listen 443 ssl http2;
        server_name _;
        
        # SSL Configuration (Let's Encrypt or custom certificates)
        # Note: In production, replace with actual certificate paths
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 10m;
        ssl_prefer_server_ciphers on;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
        
        # =======================================================================
        # WEB DASHBOARD (Default Route)
        # =======================================================================
        location / {
            limit_req zone=dashboard burst=50 nodelay;
            
            proxy_pass http://dashboard_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for real-time updates
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
        
        # =======================================================================
        # API ENDPOINTS
        # =======================================================================
        
        # Coordination Service API
        location /api/coordination/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://coordination_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # News Collection Service API
        location /api/news/ {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://news_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Security Scanner Service API
        location /api/scanner/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://scanner_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Pattern Analysis Service API
        location /api/patterns/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://pattern_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Technical Analysis Service API
        location /api/technical/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://technical_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Trading Service API
        location /api/trading/ {
            limit_req zone=api burst=5 nodelay;
            
            proxy_pass http://trading_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Reporting Service API
        location /api/reports/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://reporting_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # =======================================================================
        # MONITORING ENDPOINTS
        # =======================================================================
        
        # Prometheus metrics
        location /metrics {
            # Restrict access to monitoring
            allow 172.20.0.0/16;  # Docker network
            allow 127.0.0.1;      # Localhost
            deny all;
            
            proxy_pass http://prometheus:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Nginx status page
        location /nginx_status {
            # Restrict access
            allow 172.20.0.0/16;
            allow 127.0.0.1;
            deny all;
            
            stub_status on;
            access_log off;
        }
        
        # =======================================================================
        # STATIC ASSETS & CACHING
        # =======================================================================
        
        # Static files caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            
            proxy_pass http://dashboard_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # =======================================================================
        # ERROR PAGES
        # =======================================================================
        
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}

# =============================================================================
# DEPLOYMENT NOTES:
# =============================================================================
# 
# SSL Certificates:
# 1. For development: Use self-signed certificates
# 2. For production: Use Let's Encrypt or DigitalOcean certificates
# 3. Certificate paths should be mounted as volumes in docker-compose
#
# Rate Limiting:
# - API endpoints: 100 requests/minute per IP
# - Dashboard: 500 requests/minute per IP
# - Adjust based on expected traffic
#
# Load Balancing:
# - Currently single backend per service
# - Can be extended to multiple instances
# - Health checks ensure failed containers are bypassed
#
# Security:
# - HTTPS only in production
# - Security headers prevent common attacks
# - CSP allows WebSocket connections for real-time features
#
# Performance:
# - Gzip compression for text content
# - Static file caching
# - Connection keep-alive
# - Optimized buffer sizes
#
# Monitoring:
# - Prometheus metrics on /metrics
# - Nginx status on /nginx_status
# - Comprehensive access logging
#
# =============================================================================