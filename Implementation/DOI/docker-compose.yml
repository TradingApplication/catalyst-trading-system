version: '3.8'

services:
  # =============================================================================
  # CATALYST TRADING SYSTEM - DIGITALOCEAN DEPLOYMENT
  # Budget: $96 AUD/month (8GB Droplet + Managed DB)
  # =============================================================================

  # -----------------------------------------------------------------------------
  # REVERSE PROXY & SSL TERMINATION
  # -----------------------------------------------------------------------------
  nginx:
    image: nginx:alpine
    container_name: catalyst-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - coordination-service
      - web-dashboard
      - news-service
      - scanner-service
      - pattern-service
      - technical-service
      - trading-service
      - reporting-service
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - catalyst-network

  # -----------------------------------------------------------------------------
  # CORE ORCHESTRATION SERVICE
  # -----------------------------------------------------------------------------
  coordination-service:
    build:
      context: .
      dockerfile: Dockerfile.coordination
    container_name: catalyst-coordination
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - SERVICE_NAME=coordination
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - NEWS_SERVICE_URL=http://news-service:5008
      - SCANNER_SERVICE_URL=http://scanner-service:5001
      - PATTERN_SERVICE_URL=http://pattern-service:5002
      - TECHNICAL_SERVICE_URL=http://technical-service:5003
      - TRADING_SERVICE_URL=http://trading-service:5005
      - REPORTING_SERVICE_URL=http://reporting-service:5009
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - postgres-check
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - coordination_logs:/app/logs
    networks:
      - catalyst-network

  # -----------------------------------------------------------------------------
  # NEWS COLLECTION SERVICE
  # -----------------------------------------------------------------------------
  news-service:
    build:
      context: .
      dockerfile: Dockerfile.news
    container_name: catalyst-news
    ports:
      - "5008:5008"
    environment:
      - PORT=5008
      - SERVICE_NAME=news_collection
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - NEWSAPI_KEY=${NEWSAPI_KEY}
      - ALPHAVANTAGE_KEY=${ALPHAVANTAGE_KEY}
      - FINNHUB_KEY=${FINNHUB_KEY}
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - postgres-check
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5008/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - news_logs:/app/logs
    networks:
      - catalyst-network

  # -----------------------------------------------------------------------------
  # SECURITY SCANNER SERVICE
  # -----------------------------------------------------------------------------
  scanner-service:
    build:
      context: .
      dockerfile: Dockerfile.scanner
    container_name: catalyst-scanner
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - SERVICE_NAME=security_scanner
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - NEWS_SERVICE_URL=http://news-service:5008
      - COORDINATION_URL=http://coordination-service:5000
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - postgres-check
      - news-service
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - scanner_logs:/app/logs
    networks:
      - catalyst-network

  # -----------------------------------------------------------------------------
  # PATTERN ANALYSIS SERVICE (with TA-Lib)
  # -----------------------------------------------------------------------------
  pattern-service:
    build:
      context: .
      dockerfile: Dockerfile.patterns
    container_name: catalyst-patterns
    ports:
      - "5002:5002"
    environment:
      - PORT=5002
      - SERVICE_NAME=pattern_analysis
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - COORDINATION_URL=http://coordination-service:5000
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - postgres-check
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - pattern_logs:/app/logs
    networks:
      - catalyst-network

  # -----------------------------------------------------------------------------
  # TECHNICAL ANALYSIS SERVICE (with TA-Lib)
  # -----------------------------------------------------------------------------
  technical-service:
    build:
      context: .
      dockerfile: Dockerfile.technical
    container_name: catalyst-technical
    ports:
      - "5003:5003"
    environment:
      - PORT=5003
      - SERVICE_NAME=technical_analysis
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - COORDINATION_URL=http://coordination-service:5000
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - postgres-check
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - technical_logs:/app/logs
    networks:
      - catalyst-network

  # -----------------------------------------------------------------------------
  # PAPER TRADING SERVICE
  # -----------------------------------------------------------------------------
  trading-service:
    build:
      context: .
      dockerfile: Dockerfile.trading
    container_name: catalyst-trading
    ports:
      - "5005:5005"
    environment:
      - PORT=5005
      - SERVICE_NAME=paper_trading
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - ALPACA_API_KEY=${ALPACA_API_KEY}
      - ALPACA_SECRET_KEY=${ALPACA_SECRET_KEY}
      - ALPACA_BASE_URL=${ALPACA_BASE_URL:-https://paper-api.alpaca.markets}
      - COORDINATION_URL=http://coordination-service:5000
      - MAX_POSITIONS=${MAX_POSITIONS:-5}
      - POSITION_SIZE_PCT=${POSITION_SIZE_PCT:-20}
      - STOP_LOSS_PCT=${STOP_LOSS_PCT:-2}
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - postgres-check
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - trading_logs:/app/logs
    networks:
      - catalyst-network

  # -----------------------------------------------------------------------------
  # REPORTING SERVICE
  # -----------------------------------------------------------------------------
  reporting-service:
    build:
      context: .
      dockerfile: Dockerfile.reporting
    container_name: catalyst-reporting
    ports:
      - "5009:5009"
    environment:
      - PORT=5009
      - SERVICE_NAME=reporting
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - COORDINATION_URL=http://coordination-service:5000
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - postgres-check
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5009/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - reporting_logs:/app/logs
    networks:
      - catalyst-network

  # -----------------------------------------------------------------------------
  # WEB DASHBOARD SERVICE
  # -----------------------------------------------------------------------------
  web-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: catalyst-dashboard
    ports:
      - "5010:5010"
    environment:
      - PORT=5010
      - SERVICE_NAME=web_dashboard
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - COORDINATION_URL=http://coordination-service:5000
      - NEWS_SERVICE_URL=http://news-service:5008
      - SCANNER_SERVICE_URL=http://scanner-service:5001
      - PATTERN_SERVICE_URL=http://pattern-service:5002
      - TECHNICAL_SERVICE_URL=http://technical-service:5003
      - TRADING_SERVICE_URL=http://trading-service:5005
      - REPORTING_SERVICE_URL=http://reporting-service:5009
      - LOG_LEVEL=INFO
    depends_on:
      - coordination-service
      - redis
      - postgres-check
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5010/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - dashboard_logs:/app/logs
    networks:
      - catalyst-network

  # -----------------------------------------------------------------------------
  # SUPPORTING SERVICES
  # -----------------------------------------------------------------------------

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: catalyst-redis
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 1gb --maxmemory-policy allkeys-lru --save 60 1000
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - redis_data:/data
    networks:
      - catalyst-network

  # Database Connection Check
  postgres-check:
    image: postgres:14-alpine
    container_name: postgres-check
    environment:
      - DATABASE_URL=${DATABASE_URL}
    command: >
      sh -c "
      until pg_isready -d \"$$DATABASE_URL\"; do
        echo 'Waiting for database...';
        sleep 2;
      done;
      echo 'Database is ready!';
      exit 0;
      "
    deploy:
      resources:
        limits:
          memory: 128M
    networks:
      - catalyst-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: catalyst-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    restart: unless-stopped
    networks:
      - catalyst-network

# =============================================================================
# VOLUMES & NETWORKS
# =============================================================================

volumes:
  # Service logs
  coordination_logs:
  news_logs:
  scanner_logs:
  pattern_logs:
  technical_logs:
  trading_logs:
  reporting_logs:
  dashboard_logs:
  nginx_logs:
  
  # Data persistence
  redis_data:
  prometheus_data:

networks:
  catalyst-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# =============================================================================
# RESOURCE SUMMARY (8GB Droplet)
# =============================================================================
# Scanner Service:     1GB (heavy processing)
# Pattern Service:     1GB (TA-Lib computations)
# Technical Service:   1GB (TA-Lib computations)
# Dashboard Service:   1GB (web interface)
# Redis Cache:         1GB (data caching)
# Coordination:        512MB
# News Collection:     512MB
# Trading Service:     512MB
# Reporting Service:   512MB
# Prometheus:          512MB
# Nginx:               256MB
# Postgres Check:      128MB
# =============================================================================
# TOTAL ALLOCATED:     ~8GB (optimized for 8GB droplet)
# =============================================================================